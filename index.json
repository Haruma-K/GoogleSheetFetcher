{
  "api/GoogleSheetFetcher.Editor.AsyncControl.AsyncControlBase.html": {
    "href": "api/GoogleSheetFetcher.Editor.AsyncControl.AsyncControlBase.html",
    "title": "Class AsyncControlBase | Google Sheet Fetcher Documentation",
    "keywords": "Class AsyncControlBase A base class for the implementation of asynchronous processing without result values. Inheritance Object AsyncControlBase Implements IAsyncControl Namespace : GoogleSheetFetcher.Editor.AsyncControl Assembly : GoogleSheetFetcher.Editor.dll Syntax public abstract class AsyncControlBase : IAsyncControl Properties | Improve this Doc View Source CancellationToken Declaration protected CancellationToken CancellationToken { get; } Property Value Type Description CancellationToken | Improve this Doc View Source Exception The exception when the processing failure. Declaration public Exception Exception { get; } Property Value Type Description Exception | Improve this Doc View Source IsDone Whether or not the process completed. Declaration public bool IsDone { get; } Property Value Type Description Boolean | Improve this Doc View Source Progress Declaration protected virtual float Progress { get; } Property Value Type Description Single | Improve this Doc View Source Status The state of asynchronous processing. Declaration public AsyncControlStatus Status { get; } Property Value Type Description AsyncControlStatus | Improve this Doc View Source Task Task Declaration public Task Task { get; } Property Value Type Description Task Methods | Improve this Doc View Source Cancel() Cancel processing. Declaration public void Cancel() | Improve this Doc View Source Failed(Exception) Declaration protected void Failed(Exception exception) Parameters Type Name Description Exception exception | Improve this Doc View Source GetProgress() Get the progress of the process. Declaration public float GetProgress() Returns Type Description Single | Improve this Doc View Source OnStart() Declaration protected abstract void OnStart() | Improve this Doc View Source Start() Start processing. Declaration public void Start() | Improve this Doc View Source Succeeded() Declaration protected void Succeeded() Events | Improve this Doc View Source Completed The event that is called at the end of the process. Declaration public event Action Completed Event Type Type Description Action Implements IAsyncControl"
  },
  "api/GoogleSheetFetcher.Editor.AsyncControl.AsyncControlBase-1.html": {
    "href": "api/GoogleSheetFetcher.Editor.AsyncControl.AsyncControlBase-1.html",
    "title": "Class AsyncControlBase<TResult> | Google Sheet Fetcher Documentation",
    "keywords": "Class AsyncControlBase<TResult> A base class for the implementation of asynchronous processing. Inheritance Object AsyncControlBase<TResult> AuthorizeAsyncControl FetchFilesAsyncControl FetchSheetsAsyncControl FetchSheetValuesAsyncControl Implements IAsyncControl Namespace : GoogleSheetFetcher.Editor.AsyncControl Assembly : GoogleSheetFetcher.Editor.dll Syntax public abstract class AsyncControlBase<TResult> : IAsyncControl Type Parameters Name Description TResult Properties | Improve this Doc View Source CancellationToken Declaration protected CancellationToken CancellationToken { get; } Property Value Type Description CancellationToken | Improve this Doc View Source Exception The exception when the processing failure. Declaration public Exception Exception { get; } Property Value Type Description Exception | Improve this Doc View Source IsDone Whether or not the process completed. Declaration public bool IsDone { get; } Property Value Type Description Boolean | Improve this Doc View Source Progress Declaration protected virtual float Progress { get; } Property Value Type Description Single | Improve this Doc View Source Result The result of the processing. Declaration public TResult Result { get; } Property Value Type Description TResult | Improve this Doc View Source Status The state of asynchronous processing. Declaration public AsyncControlStatus Status { get; } Property Value Type Description AsyncControlStatus | Improve this Doc View Source Task Task Declaration public Task<TResult> Task { get; } Property Value Type Description Task <TResult> Methods | Improve this Doc View Source Cancel() Cancel processing. Declaration public void Cancel() | Improve this Doc View Source Failed(Exception) Declaration protected void Failed(Exception exception) Parameters Type Name Description Exception exception | Improve this Doc View Source GetProgress() Get the progress of the process. Declaration public float GetProgress() Returns Type Description Single | Improve this Doc View Source OnStart() Declaration protected abstract void OnStart() | Improve this Doc View Source Start() Start processing. Declaration public void Start() | Improve this Doc View Source Succeeded(TResult) Declaration protected void Succeeded(TResult result) Parameters Type Name Description TResult result Events | Improve this Doc View Source Completed The event that is called at the end of the process. Declaration public event Action Completed Event Type Type Description Action Explicit Interface Implementations | Improve this Doc View Source IAsyncControl.Task Declaration Task IAsyncControl.Task { get; } Returns Type Description Task Implements IAsyncControl"
  },
  "api/GoogleSheetFetcher.Editor.AsyncControl.AsyncControlHandle.html": {
    "href": "api/GoogleSheetFetcher.Editor.AsyncControl.AsyncControlHandle.html",
    "title": "Class AsyncControlHandle | Google Sheet Fetcher Documentation",
    "keywords": "Class AsyncControlHandle Inheritance Object AsyncControlHandle Namespace : GoogleSheetFetcher.Editor.AsyncControl Assembly : GoogleSheetFetcher.Editor.dll Syntax public class AsyncControlHandle : IEnumerator Constructors | Improve this Doc View Source AsyncControlHandle(IAsyncControl) Declaration public AsyncControlHandle(IAsyncControl control) Parameters Type Name Description IAsyncControl control Properties | Improve this Doc View Source Exception The exception when the processing failure. Declaration public Exception Exception { get; } Property Value Type Description Exception | Improve this Doc View Source IsDone Whether or not the process completed. Declaration public bool IsDone { get; } Property Value Type Description Boolean | Improve this Doc View Source Progress The progress of the process. Declaration public float Progress { get; } Property Value Type Description Single | Improve this Doc View Source Status The state of asynchronous processing. Declaration public AsyncControlStatus Status { get; } Property Value Type Description AsyncControlStatus | Improve this Doc View Source Task Task Declaration public Task Task { get; } Property Value Type Description Task Methods | Improve this Doc View Source Cancel() Cancel the process. Declaration public void Cancel() Events | Improve this Doc View Source Completed The event that is called at the end of the process. Declaration public event Action Completed Event Type Type Description Action"
  },
  "api/GoogleSheetFetcher.Editor.AsyncControl.AsyncControlHandle-1.html": {
    "href": "api/GoogleSheetFetcher.Editor.AsyncControl.AsyncControlHandle-1.html",
    "title": "Class AsyncControlHandle<TResult> | Google Sheet Fetcher Documentation",
    "keywords": "Class AsyncControlHandle<TResult> Inheritance Object AsyncControlHandle<TResult> Namespace : GoogleSheetFetcher.Editor.AsyncControl Assembly : GoogleSheetFetcher.Editor.dll Syntax public class AsyncControlHandle<TResult> : IEnumerator Type Parameters Name Description TResult Constructors | Improve this Doc View Source AsyncControlHandle(AsyncControlBase<TResult>) Declaration public AsyncControlHandle(AsyncControlBase<TResult> control) Parameters Type Name Description AsyncControlBase <TResult> control Properties | Improve this Doc View Source Exception The exception when the processing failure. Declaration public Exception Exception { get; } Property Value Type Description Exception | Improve this Doc View Source IsDone Whether or not the process completed. Declaration public bool IsDone { get; } Property Value Type Description Boolean | Improve this Doc View Source Progress The progress of the process. Declaration public float Progress { get; } Property Value Type Description Single | Improve this Doc View Source Result Result Declaration public TResult Result { get; } Property Value Type Description TResult | Improve this Doc View Source Status The state of asynchronous processing. Declaration public AsyncControlStatus Status { get; } Property Value Type Description AsyncControlStatus | Improve this Doc View Source Task Task Declaration public Task<TResult> Task { get; } Property Value Type Description Task <TResult> Methods | Improve this Doc View Source Cancel() Cancel the process. Declaration public void Cancel() Events | Improve this Doc View Source Completed The event that is called at the end of the process. Declaration public event Action Completed Event Type Type Description Action"
  },
  "api/GoogleSheetFetcher.Editor.AsyncControl.AsyncControlStatus.html": {
    "href": "api/GoogleSheetFetcher.Editor.AsyncControl.AsyncControlStatus.html",
    "title": "Enum AsyncControlStatus | Google Sheet Fetcher Documentation",
    "keywords": "Enum AsyncControlStatus The status of the GoogleSheetFetcher.Editor.AsyncControl . Namespace : GoogleSheetFetcher.Editor.AsyncControl Assembly : GoogleSheetFetcher.Editor.dll Syntax public enum AsyncControlStatus Fields Name Description Failed None Processing Succeeded"
  },
  "api/GoogleSheetFetcher.Editor.AsyncControl.html": {
    "href": "api/GoogleSheetFetcher.Editor.AsyncControl.html",
    "title": "Namespace GoogleSheetFetcher.Editor.AsyncControl | Google Sheet Fetcher Documentation",
    "keywords": "Namespace GoogleSheetFetcher.Editor.AsyncControl Classes AsyncControlBase A base class for the implementation of asynchronous processing without result values. AsyncControlBase<TResult> A base class for the implementation of asynchronous processing. AsyncControlHandle AsyncControlHandle<TResult> Interfaces IAsyncControl Enums AsyncControlStatus The status of the GoogleSheetFetcher.Editor.AsyncControl ."
  },
  "api/GoogleSheetFetcher.Editor.AsyncControl.IAsyncControl.html": {
    "href": "api/GoogleSheetFetcher.Editor.AsyncControl.IAsyncControl.html",
    "title": "Interface IAsyncControl | Google Sheet Fetcher Documentation",
    "keywords": "Interface IAsyncControl Namespace : GoogleSheetFetcher.Editor.AsyncControl Assembly : GoogleSheetFetcher.Editor.dll Syntax public interface IAsyncControl Properties | Improve this Doc View Source Exception The exception when the processing failure. Declaration Exception Exception { get; } Property Value Type Description Exception | Improve this Doc View Source IsDone Whether or not the process completed. Declaration bool IsDone { get; } Property Value Type Description Boolean | Improve this Doc View Source Status The state of asynchronous processing. Declaration AsyncControlStatus Status { get; } Property Value Type Description AsyncControlStatus | Improve this Doc View Source Task Task Declaration Task Task { get; } Property Value Type Description Task Methods | Improve this Doc View Source Cancel() Cancel processing. Declaration void Cancel() | Improve this Doc View Source GetProgress() Get the progress of the process. Declaration float GetProgress() Returns Type Description Single | Improve this Doc View Source Start() Start processing. Declaration void Start() Events | Improve this Doc View Source Completed The event that is called at the end of the process. Declaration event Action Completed Event Type Type Description Action"
  },
  "api/GoogleSheetFetcher.Editor.AuthorizeAsyncControl.html": {
    "href": "api/GoogleSheetFetcher.Editor.AuthorizeAsyncControl.html",
    "title": "Class AuthorizeAsyncControl | Google Sheet Fetcher Documentation",
    "keywords": "Class AuthorizeAsyncControl Inheritance Object AsyncControlBase < UserCredential > AuthorizeAsyncControl Implements IAsyncControl Inherited Members AsyncControlBase<UserCredential>.Completed AsyncControlBase<UserCredential>.Status AsyncControlBase<UserCredential>.Exception AsyncControlBase<UserCredential>.Result AsyncControlBase<UserCredential>.IsDone AsyncControlBase<UserCredential>.Task AsyncControlBase<UserCredential>.IAsyncControl.Task AsyncControlBase<UserCredential>.Progress AsyncControlBase<UserCredential>.CancellationToken AsyncControlBase<UserCredential>.Succeeded(UserCredential) AsyncControlBase<UserCredential>.Failed(Exception) AsyncControlBase<UserCredential>.GetProgress() AsyncControlBase<UserCredential>.Start() AsyncControlBase<UserCredential>.Cancel() Namespace : GoogleSheetFetcher.Editor Assembly : GoogleSheetFetcher.Editor.dll Syntax public class AuthorizeAsyncControl : AsyncControlBase<UserCredential>, IAsyncControl Constructors | Improve this Doc View Source AuthorizeAsyncControl(String, String, String, List<String>) Constructor. Declaration public AuthorizeAsyncControl(string clientId, string clientSecret, string applicationId, List<string> scopes) Parameters Type Name Description String clientId String clientSecret String applicationId List < String > scopes Methods | Improve this Doc View Source OnStart() Declaration protected override void OnStart() Overrides GoogleSheetFetcher.Editor.AsyncControl.AsyncControlBase<UserCredential>.OnStart() Implements IAsyncControl"
  },
  "api/GoogleSheetFetcher.Editor.Fetcher.html": {
    "href": "api/GoogleSheetFetcher.Editor.Fetcher.html",
    "title": "Class Fetcher | Google Sheet Fetcher Documentation",
    "keywords": "Class Fetcher Inheritance Object Fetcher Namespace : GoogleSheetFetcher.Editor Assembly : GoogleSheetFetcher.Editor.dll Syntax public class Fetcher Properties | Improve this Doc View Source DidInitialize Declaration public bool DidInitialize { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source FetchFilesAsync(String, FileType[], Int32, String) Fetch the metadata of the files in the specified folder. Declaration public AsyncControlHandle<FileList> FetchFilesAsync(string folderIdOrName, FileType[] fileTypes, int pageSize = 100, string pageToken = null) Parameters Type Name Description String folderIdOrName A folder id or a folder name. FileType [] fileTypes An array of FileType you needed. Int32 pageSize Number of data to be fetched at one time. String pageToken A token to fetch the next page. Returns Type Description AsyncControlHandle < FileList > | Improve this Doc View Source FetchSheetsAsync(String) Fetch the information of all the sheets contained in the spread sheet. Declaration public AsyncControlHandle<IList<Sheet>> FetchSheetsAsync(string spreadsheetId) Parameters Type Name Description String spreadsheetId The spreadsheet id. Returns Type Description AsyncControlHandle < IList < Sheet >> The list of the information of all the sheets. | Improve this Doc View Source FetchValuesAsync(String, Sheet) Fetch all the values contained in the sheet. Declaration public AsyncControlHandle<IList<IList<object>>> FetchValuesAsync(string spreadsheetId, Sheet sheet = null) Parameters Type Name Description String spreadsheetId The spreadsheet id. Sheet sheet The Sheet instance obtained as the result of FetchSheetsAsync(String) . Returns Type Description AsyncControlHandle < IList < IList < Object >>> The list of the rows. | Improve this Doc View Source FetchValuesAsync(String, String) Fetch all the values contained in the sheet. Declaration public AsyncControlHandle<IList<IList<object>>> FetchValuesAsync(string spreadsheetId, string sheetName = null) Parameters Type Name Description String spreadsheetId The spreadsheet id. String sheetName The sheet name. Returns Type Description AsyncControlHandle < IList < IList < Object >>> The list of the rows. | Improve this Doc View Source InitializeAsync(String, String, String) Initialize the Fetcher with the following scopes. * https://www.googleapis.com/auth/drive.readonly * https://www.googleapis.com/auth/spreadsheets.readonly Declaration public AsyncControlHandle InitializeAsync(string clientId, string clientSecret, string applicationId) Parameters Type Name Description String clientId Google OAuth2 Client ID. String clientSecret Google OAuth2 Client Secret. String applicationId The identifier to use the for file to store the credentials. Returns Type Description AsyncControlHandle | Improve this Doc View Source InitializeAsync(String, String, String, List<String>) Initialize the Fetcher . Declaration public AsyncControlHandle InitializeAsync(string clientId, string clientSecret, string applicationId, List<string> scopes) Parameters Type Name Description String clientId Google OAuth2 Client ID. String clientSecret Google OAuth2 Client Secret. String applicationId The identifier to use the for file to store the credentials. List < String > scopes The scopes you want to use. Returns Type Description AsyncControlHandle"
  },
  "api/GoogleSheetFetcher.Editor.FetchFilesAsyncControl.html": {
    "href": "api/GoogleSheetFetcher.Editor.FetchFilesAsyncControl.html",
    "title": "Class FetchFilesAsyncControl | Google Sheet Fetcher Documentation",
    "keywords": "Class FetchFilesAsyncControl Inheritance Object AsyncControlBase < FileList > FetchFilesAsyncControl Implements IAsyncControl Inherited Members AsyncControlBase<FileList>.Completed AsyncControlBase<FileList>.Status AsyncControlBase<FileList>.Exception AsyncControlBase<FileList>.Result AsyncControlBase<FileList>.IsDone AsyncControlBase<FileList>.Task AsyncControlBase<FileList>.IAsyncControl.Task AsyncControlBase<FileList>.Progress AsyncControlBase<FileList>.CancellationToken AsyncControlBase<FileList>.Succeeded(FileList) AsyncControlBase<FileList>.Failed(Exception) AsyncControlBase<FileList>.GetProgress() AsyncControlBase<FileList>.Start() AsyncControlBase<FileList>.Cancel() Namespace : GoogleSheetFetcher.Editor Assembly : GoogleSheetFetcher.Editor.dll Syntax public class FetchFilesAsyncControl : AsyncControlBase<FileList>, IAsyncControl Constructors | Improve this Doc View Source FetchFilesAsyncControl(DriveService, String, FileType[], Int32, String) Constructor. Declaration public FetchFilesAsyncControl(DriveService driveService, string folderIdOrName, FileType[] fileTypes, int pageSize = 100, string pageToken = null) Parameters Type Name Description DriveService driveService A instance of the . String folderIdOrName A folder id or a folder name. FileType [] fileTypes An array of FileType you needed. Int32 pageSize Number of data to be fetched at one time. String pageToken A token to fetch the next page. Methods | Improve this Doc View Source OnStart() Declaration protected override void OnStart() Overrides GoogleSheetFetcher.Editor.AsyncControl.AsyncControlBase<GoogleSheetFetcher.Editor.FileList>.OnStart() Implements IAsyncControl"
  },
  "api/GoogleSheetFetcher.Editor.FetchSheetsAsyncControl.html": {
    "href": "api/GoogleSheetFetcher.Editor.FetchSheetsAsyncControl.html",
    "title": "Class FetchSheetsAsyncControl | Google Sheet Fetcher Documentation",
    "keywords": "Class FetchSheetsAsyncControl Inheritance Object AsyncControlBase < IList < Sheet >> FetchSheetsAsyncControl Implements IAsyncControl Inherited Members AsyncControlBase<IList<Sheet>>.Completed AsyncControlBase<IList<Sheet>>.Status AsyncControlBase<IList<Sheet>>.Exception AsyncControlBase<IList<Sheet>>.Result AsyncControlBase<IList<Sheet>>.IsDone AsyncControlBase<IList<Sheet>>.Task AsyncControlBase<IList<Sheet>>.IAsyncControl.Task AsyncControlBase<IList<Sheet>>.Progress AsyncControlBase<IList<Sheet>>.CancellationToken AsyncControlBase<IList<Sheet>>.Succeeded(IList<Sheet>) AsyncControlBase<IList<Sheet>>.Failed(Exception) AsyncControlBase<IList<Sheet>>.GetProgress() AsyncControlBase<IList<Sheet>>.Start() AsyncControlBase<IList<Sheet>>.Cancel() Namespace : GoogleSheetFetcher.Editor Assembly : GoogleSheetFetcher.Editor.dll Syntax public class FetchSheetsAsyncControl : AsyncControlBase<IList<Sheet>>, IAsyncControl Constructors | Improve this Doc View Source FetchSheetsAsyncControl(SheetsService, String) Constructor. Declaration public FetchSheetsAsyncControl(SheetsService sheetsService, string spreadsheetId) Parameters Type Name Description SheetsService sheetsService A instance of the . String spreadsheetId The name of the Spreadsheet. Methods | Improve this Doc View Source OnStart() Declaration protected override void OnStart() Overrides GoogleSheetFetcher.Editor.AsyncControl.AsyncControlBase<System.Collections.Generic.IList<GoogleSheetFetcher.Editor.Sheet>>.OnStart() Implements IAsyncControl"
  },
  "api/GoogleSheetFetcher.Editor.FetchSheetValuesAsyncControl.html": {
    "href": "api/GoogleSheetFetcher.Editor.FetchSheetValuesAsyncControl.html",
    "title": "Class FetchSheetValuesAsyncControl | Google Sheet Fetcher Documentation",
    "keywords": "Class FetchSheetValuesAsyncControl Inheritance Object AsyncControlBase < IList < IList < Object >>> FetchSheetValuesAsyncControl Implements IAsyncControl Inherited Members AsyncControlBase<IList<IList<Object>>>.Completed AsyncControlBase<IList<IList<Object>>>.Status AsyncControlBase<IList<IList<Object>>>.Exception AsyncControlBase<IList<IList<Object>>>.Result AsyncControlBase<IList<IList<Object>>>.IsDone AsyncControlBase<IList<IList<Object>>>.Task AsyncControlBase<IList<IList<Object>>>.IAsyncControl.Task AsyncControlBase<IList<IList<Object>>>.Progress AsyncControlBase<IList<IList<Object>>>.CancellationToken AsyncControlBase<IList<IList<Object>>>.Succeeded(IList<IList<Object>>) AsyncControlBase<IList<IList<Object>>>.Failed(Exception) AsyncControlBase<IList<IList<Object>>>.GetProgress() AsyncControlBase<IList<IList<Object>>>.Start() AsyncControlBase<IList<IList<Object>>>.Cancel() Namespace : GoogleSheetFetcher.Editor Assembly : GoogleSheetFetcher.Editor.dll Syntax public class FetchSheetValuesAsyncControl : AsyncControlBase<IList<IList<object>>>, IAsyncControl Constructors | Improve this Doc View Source FetchSheetValuesAsyncControl(SheetsService, String, String) Constructor. Declaration public FetchSheetValuesAsyncControl(SheetsService sheetsService, string spreadsheetId, string sheetName = null) Parameters Type Name Description SheetsService sheetsService A instance of the . String spreadsheetId The name of the Spreadsheet. String sheetName The sheet name. Methods | Improve this Doc View Source OnStart() Declaration protected override void OnStart() Overrides GoogleSheetFetcher.Editor.AsyncControl.AsyncControlBase<System.Collections.Generic.IList<System.Collections.Generic.IList<System.Object>>>.OnStart() Implements IAsyncControl"
  },
  "api/GoogleSheetFetcher.Editor.File.html": {
    "href": "api/GoogleSheetFetcher.Editor.File.html",
    "title": "Class File | Google Sheet Fetcher Documentation",
    "keywords": "Class File Inheritance Object File Namespace : GoogleSheetFetcher.Editor Assembly : GoogleSheetFetcher.Editor.dll Syntax public class File Properties | Improve this Doc View Source FileType Declaration public FileType FileType { get; } Property Value Type Description FileType | Improve this Doc View Source Id Declaration public string Id { get; } Property Value Type Description String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String"
  },
  "api/GoogleSheetFetcher.Editor.FileList.html": {
    "href": "api/GoogleSheetFetcher.Editor.FileList.html",
    "title": "Class FileList | Google Sheet Fetcher Documentation",
    "keywords": "Class FileList A list of metadata of the files on Google Drive. Inheritance Object FileList Namespace : GoogleSheetFetcher.Editor Assembly : GoogleSheetFetcher.Editor.dll Syntax public class FileList Properties | Improve this Doc View Source Files Metadata of the files. Declaration public File[] Files { get; } Property Value Type Description File [] | Improve this Doc View Source NextPageToken A token to fetch the next page. Declaration public string NextPageToken { get; } Property Value Type Description String"
  },
  "api/GoogleSheetFetcher.Editor.FileType.html": {
    "href": "api/GoogleSheetFetcher.Editor.FileType.html",
    "title": "Enum FileType | Google Sheet Fetcher Documentation",
    "keywords": "Enum FileType Type of Google drive files. Namespace : GoogleSheetFetcher.Editor Assembly : GoogleSheetFetcher.Editor.dll Syntax public enum FileType Fields Name Description Folder Spreadsheet"
  },
  "api/GoogleSheetFetcher.Editor.html": {
    "href": "api/GoogleSheetFetcher.Editor.html",
    "title": "Namespace GoogleSheetFetcher.Editor | Google Sheet Fetcher Documentation",
    "keywords": "Namespace GoogleSheetFetcher.Editor Classes AuthorizeAsyncControl Fetcher FetchFilesAsyncControl FetchSheetsAsyncControl FetchSheetValuesAsyncControl File FileList A list of metadata of the files on Google Drive. Sheet Enums FileType Type of Google drive files."
  },
  "api/GoogleSheetFetcher.Editor.Sheet.html": {
    "href": "api/GoogleSheetFetcher.Editor.Sheet.html",
    "title": "Class Sheet | Google Sheet Fetcher Documentation",
    "keywords": "Class Sheet Inheritance Object Sheet Namespace : GoogleSheetFetcher.Editor Assembly : GoogleSheetFetcher.Editor.dll Syntax public class Sheet Properties | Improve this Doc View Source Id The gid of the sheet. Declaration public string Id { get; } Property Value Type Description String | Improve this Doc View Source Name The sheet name. Declaration public string Name { get; } Property Value Type Description String"
  },
  "index.html": {
    "href": "index.html",
    "title": "GoogleSheetFetcher | Google Sheet Fetcher Documentation",
    "keywords": "GoogleSheetFetcher Overview The Simple Google Sheets reader for Unity editor. You can do OAuth2 authorization and fetch the spreadsheet values by writing the following. // Google OAuth2 authorization. var fetcher = new Fetcher(); await fetcher.InitializeAsync(_clientId, _clientSecret, _applicationId).Task; // Get all the values in the sheet. var values = await fetcher.FetchValuesAsync(_spreadsheetId, sheets[0]).Task; Usage Please refer to the manual for usage. License This library is under the MIT License . This software includes the work that is distributed in the Apache License 2.0 ."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Usage | Google Sheet Fetcher Documentation",
    "keywords": "Usage Install Unity2019.3.4 or later Add the dependency to your manifest.json as follows. { \"dependencies\": { \"com.harumak.googlesheetfetcher\": \"https://github.com/Haruma-K/GoogleSheetFetcher.git?path=/Packages/com.harumak.googlesheetfetcher\" } } Unity2019.3.3 or earlier Download ZIP Copy Packages/com.harumak.googlesheetfetcher to your project. Add the dependency to your manifest.json as follows. { \"dependencies\": { \"com.harumak.googlesheetfetcher\": \"file:com.harumak.googlesheetfetcher\" } } Set up the Google API Create the project Go to Google Developer Console . If you don't have project, select Select a project > NEW PROJECT to create a project. On the next page, enter the project name and click on the CREATE button. Create OAuth consent screen Then select the project, and press OAuth consent screen from the menu on the left. Next, select the User Type according to the use, and click on the CREATE And enter the Application Name and press the SAVE button on the next page. Create Client ID & Client Secret Next, click on the Credentials from the menu on the left. And select CREATE CREDENTIALS > OAuth Client ID . Select Other for the application type, enter an Name and click on the Create button. Enable APIs Enable the APIs to be used. Select Library from the menu on the left. Then search the Google Sheets API and click on the Enable button. And enable the Google Drive API in the same way. Write scripts Initialize First, instantiate and initialize the Fetcher. // Google OAuth2 authorization. var fetcher = new Fetcher(); await fetcher.InitializeAsync(_clientId, _clientSecret, _applicationId).Task; Then, the OAuth2 authentication page by Google will be opened. When the user completes the authorization, the authorization information is saved. Fetch values of a sheet After the authorization, you can fetch the data from Spreadsheet. // Get all the values in the sheet. var values = await fetcher.FetchValuesAsync(_spreadsheetId, sheets[0]).Task; For other APIs, refer to the API documentation of the Fetcher class ."
  },
  "manual/license.html": {
    "href": "manual/license.html",
    "title": "Lisence | Google Sheet Fetcher Documentation",
    "keywords": "Lisence This library is under the MIT License . This software includes the work that is distributed in the Apache License 2.0 ."
  }
}